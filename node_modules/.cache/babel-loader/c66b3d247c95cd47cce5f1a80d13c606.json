{"ast":null,"code":"var _s = $RefreshSig$();\n\nconst isInWebApp = window.navigator.standalone === true || window.matchMedia(\"(display-mode: standalone)\").matches;\nexport function useAddToHomeScreenPrompt() {\n  _s();\n\n  const [prompt, setPrompt] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const [hasFinishedInstallation, setHasFinishedInstallation] = useState(isInWebApp);\n  const finishInstallation = useCallback(function () {\n    setHasFinishedInstallation(true);\n  }, []);\n  const promptToInstall = useCallback(function () {\n    if (prompt) {\n      prompt.prompt();\n      prompt.userChoice.then(function (choiceResult) {\n        if (choiceResult.outcome === \"accepted\") {\n          finishInstallation();\n        }\n      });\n      return;\n    }\n\n    return Promise.reject(new Error('Tried installing before browser sent \"beforeinstallprompt\" event'));\n  }, [finishInstallation, prompt]);\n  useEffect(function () {\n    if (prompt) {\n      setIsReady(true);\n    }\n  }, [prompt]);\n  useEffect(function () {\n    function ready(e) {\n      e.preventDefault();\n      setPrompt(e);\n    }\n\n    window.addEventListener(\"beforeinstallprompt\", ready);\n    return function () {\n      window.removeEventListener(\"beforeinstallprompt\", ready);\n    };\n  }, []);\n  return useMemo(() => ({\n    isReady,\n    promptToInstall,\n    hasFinishedInstallation,\n    finishInstallation\n  }), [isReady, promptToInstall, hasFinishedInstallation, finishInstallation]);\n}\n\n_s(useAddToHomeScreenPrompt, \"AtcNldGK/HMbQlpHw5RIPcSQYiA=\");","map":{"version":3,"sources":["D:/Juanchi/Programacion/Practicas realizadas/01-02-22 React y TypeScript - React-portafolio-pwa/src/Hooks/useAddToHomeScreenPrompt.tsx"],"names":["isInWebApp","window","navigator","standalone","matchMedia","matches","useAddToHomeScreenPrompt","prompt","setPrompt","useState","isReady","setIsReady","hasFinishedInstallation","setHasFinishedInstallation","finishInstallation","useCallback","promptToInstall","userChoice","then","choiceResult","outcome","Promise","reject","Error","useEffect","ready","e","preventDefault","addEventListener","removeEventListener","useMemo"],"mappings":";;AASA,MAAMA,UAAU,GACdC,MAAM,CAACC,SAAP,CAAiBC,UAAjB,KAAgC,IAAhC,IACAF,MAAM,CAACG,UAAP,CAAkB,4BAAlB,EAAgDC,OAFlD;AAIA,OAAO,SAASC,wBAAT,GAAoC;AAAA;;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAmC,IAAnC,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACG,uBAAD,EAA0BC,0BAA1B,IACJJ,QAAQ,CAACT,UAAD,CADV;AAGA,QAAMc,kBAAkB,GAAGC,WAAW,CAAC,YAAY;AACjDF,IAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACD,GAFqC,EAEnC,EAFmC,CAAtC;AAIA,QAAMG,eAAe,GAAGD,WAAW,CACjC,YAAY;AACV,QAAIR,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACA,MAAP;AACAA,MAAAA,MAAM,CAACU,UAAP,CAAkBC,IAAlB,CAAuB,UAAUC,YAAV,EAAwB;AAC7C,YAAIA,YAAY,CAACC,OAAb,KAAyB,UAA7B,EAAyC;AACvCN,UAAAA,kBAAkB;AACnB;AACF,OAJD;AAKA;AACD;;AAED,WAAOO,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,CACE,kEADF,CADK,CAAP;AAKD,GAjBgC,EAkBjC,CAACT,kBAAD,EAAqBP,MAArB,CAlBiC,CAAnC;AAqBAiB,EAAAA,SAAS,CACP,YAAY;AACV,QAAIjB,MAAJ,EAAY;AACVI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GALM,EAMP,CAACJ,MAAD,CANO,CAAT;AASAiB,EAAAA,SAAS,CAAC,YAAY;AACpB,aAASC,KAAT,CAAeC,CAAf,EAA6C;AAC3CA,MAAAA,CAAC,CAACC,cAAF;AACAnB,MAAAA,SAAS,CAACkB,CAAD,CAAT;AACD;;AAEDzB,IAAAA,MAAM,CAAC2B,gBAAP,CAAwB,qBAAxB,EAA+CH,KAA/C;AAEA,WAAO,YAAY;AACjBxB,MAAAA,MAAM,CAAC4B,mBAAP,CAA2B,qBAA3B,EAAkDJ,KAAlD;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAOK,OAAO,CACZ,OAAO;AACLpB,IAAAA,OADK;AAELM,IAAAA,eAFK;AAGLJ,IAAAA,uBAHK;AAILE,IAAAA;AAJK,GAAP,CADY,EAOZ,CAACJ,OAAD,EAAUM,eAAV,EAA2BJ,uBAA3B,EAAoDE,kBAApD,CAPY,CAAd;AASD;;GA9DeR,wB","sourcesContent":["interface IBeforeInstallPromptEvent extends Event {\r\n  readonly platforms: string[];\r\n  readonly userChoice: Promise<{\r\n    outcome: \"accepted\" | \"dismissed\";\r\n    platform: string;\r\n  }>;\r\n  prompt(): Promise<void>;\r\n}\r\n\r\nconst isInWebApp =\r\n  window.navigator.standalone === true ||\r\n  window.matchMedia(\"(display-mode: standalone)\").matches;\r\n\r\nexport function useAddToHomeScreenPrompt() {\r\n  const [prompt, setPrompt] = useState<IBeforeInstallPromptEvent | null>(null);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [hasFinishedInstallation, setHasFinishedInstallation] =\r\n    useState(isInWebApp);\r\n\r\n  const finishInstallation = useCallback(function () {\r\n    setHasFinishedInstallation(true);\r\n  }, []);\r\n\r\n  const promptToInstall = useCallback(\r\n    function () {\r\n      if (prompt) {\r\n        prompt.prompt();\r\n        prompt.userChoice.then(function (choiceResult) {\r\n          if (choiceResult.outcome === \"accepted\") {\r\n            finishInstallation();\r\n          }\r\n        });\r\n        return;\r\n      }\r\n\r\n      return Promise.reject(\r\n        new Error(\r\n          'Tried installing before browser sent \"beforeinstallprompt\" event'\r\n        )\r\n      );\r\n    },\r\n    [finishInstallation, prompt]\r\n  );\r\n\r\n  useEffect(\r\n    function () {\r\n      if (prompt) {\r\n        setIsReady(true);\r\n      }\r\n    },\r\n    [prompt]\r\n  );\r\n\r\n  useEffect(function () {\r\n    function ready(e: IBeforeInstallPromptEvent) {\r\n      e.preventDefault();\r\n      setPrompt(e);\r\n    }\r\n\r\n    window.addEventListener(\"beforeinstallprompt\", ready as any);\r\n\r\n    return function () {\r\n      window.removeEventListener(\"beforeinstallprompt\", ready as any);\r\n    };\r\n  }, []);\r\n\r\n  return useMemo(\r\n    () => ({\r\n      isReady,\r\n      promptToInstall,\r\n      hasFinishedInstallation,\r\n      finishInstallation,\r\n    }),\r\n    [isReady, promptToInstall, hasFinishedInstallation, finishInstallation]\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}