{"ast":null,"code":"import HeaderCSS from \"../Components/Header/Header.module.css\";\nexport default (function () {\n  /*Almacenamos en una const, todos los elementos de tipo \"section\"\r\n     que tienen el data-attribute \"data-scroll-spy\"*/\n  const $sections = document.querySelectorAll(\"main section[data-scroll-spy]\");\n\n  const cb = entries => {\n    entries.forEach(entry => {\n      //Traemos el \"id\" de cada elemento seccion\n      const id = entry.target.getAttribute(\"id\");\n      const enlace = document.querySelector(`a[data-scroll-spy][href=\"#${id}\"]`);\n\n      if (entry.isIntersecting) {\n        enlace.classList.add(`${HeaderCSS.active}`);\n      } else {\n        enlace.classList.remove(`${HeaderCSS.active}`);\n      }\n    });\n  };\n\n  const observer = new IntersectionObserver(cb, {\n    //Limites => Va de 0 a 1 (en porcentajes 1 = 100%). El 0 significa que en cuanto apenas se vea un 0% del contenido de la siguiente seccion, se va a marcar\n    threshold: 0.4\n  });\n  $sections.forEach(section => observer.observe(section));\n})();","map":{"version":3,"sources":["C:/Users/juan puto/Desktop/react-portafolio-pwa/src/Utils/menuScrollSpy.ts"],"names":["HeaderCSS","$sections","document","querySelectorAll","cb","entries","forEach","entry","id","target","getAttribute","enlace","querySelector","isIntersecting","classList","add","active","remove","observer","IntersectionObserver","threshold","section","observe"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,wCAAtB;AAEA,eAAe,CAAC,YAAY;AAG1B;AACF;AACE,QAAMC,SAAS,GAAGC,QAAQ,CAACC,gBAAT,CAChB,+BADgB,CAAlB;;AAIA,QAAMC,EAAE,GAAIC,OAAD,IAAkB;AAC3BA,IAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAgB;AAC9B;AACA,YAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,IAA1B,CAAX;AAEA,YAAMC,MAAM,GAAGT,QAAQ,CAACU,aAAT,CACZ,6BAA4BJ,EAAG,IADnB,CAAf;;AAIA,UAAID,KAAK,CAACM,cAAV,EAA0B;AACxBF,QAAAA,MAAM,CAACG,SAAP,CAAiBC,GAAjB,CAAsB,GAAEf,SAAS,CAACgB,MAAO,EAAzC;AACD,OAFD,MAEO;AACLL,QAAAA,MAAM,CAACG,SAAP,CAAiBG,MAAjB,CAAyB,GAAEjB,SAAS,CAACgB,MAAO,EAA5C;AACD;AACF,KAbD;AAcD,GAfD;;AAiBA,QAAME,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBf,EAAzB,EAA6B;AAC5C;AACAgB,IAAAA,SAAS,EAAE;AAFiC,GAA7B,CAAjB;AAKAnB,EAAAA,SAAS,CAACK,OAAV,CAAmBe,OAAD,IAAaH,QAAQ,CAACI,OAAT,CAAiBD,OAAjB,CAA/B;AACD,CAhCc,GAAf","sourcesContent":["import HeaderCSS from \"../Components/Header/Header.module.css\";\r\n\r\nexport default (function () {\r\n\r\n\r\n  /*Almacenamos en una const, todos los elementos de tipo \"section\"\r\n     que tienen el data-attribute \"data-scroll-spy\"*/\r\n  const $sections = document.querySelectorAll(\r\n    \"main section[data-scroll-spy]\"\r\n  ) as NodeListOf<Element>;\r\n\r\n  const cb = (entries: any) => {\r\n    entries.forEach((entry: any) => {\r\n      //Traemos el \"id\" de cada elemento seccion\r\n      const id = entry.target.getAttribute(\"id\");\r\n\r\n      const enlace = document.querySelector(\r\n        `a[data-scroll-spy][href=\"#${id}\"]`\r\n      ) as HTMLElement;\r\n\r\n      if (entry.isIntersecting) {\r\n        enlace.classList.add(`${HeaderCSS.active}`);\r\n      } else {\r\n        enlace.classList.remove(`${HeaderCSS.active}`);\r\n      }\r\n    });\r\n  };\r\n\r\n  const observer = new IntersectionObserver(cb, {\r\n    //Limites => Va de 0 a 1 (en porcentajes 1 = 100%). El 0 significa que en cuanto apenas se vea un 0% del contenido de la siguiente seccion, se va a marcar\r\n    threshold: 0.4,\r\n  });\r\n\r\n  $sections.forEach((section) => observer.observe(section));\r\n})();\r\n"]},"metadata":{},"sourceType":"module"}