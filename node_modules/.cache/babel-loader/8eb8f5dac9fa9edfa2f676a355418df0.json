{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nconst isInWebApp = window.matchMedia(\"(display-mode: standalone)\").matches;\nexport function useAddToHomeScreenPrompt() {\n  _s();\n\n  // CODIGO SACADO DE: https://www.youtube.com/watch?v=3f20qBfACzI\n  // No entendi su funcionamiento pero anda.\n  const [prompt, setPrompt] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const [hasFinishedInstallation, setHasFinishedInstallation] = useState(isInWebApp);\n  const finishInstallation = useCallback(() => {\n    setHasFinishedInstallation(true);\n  }, []); // Hace aparecer la ventana para isntalar\n\n  const promptToInstall = useCallback(() => {\n    if (prompt) {\n      prompt.prompt();\n      prompt.userChoice.then(function (choiceResult) {\n        if (choiceResult.outcome === \"accepted\") {\n          finishInstallation();\n        }\n      });\n      return;\n    }\n\n    return Promise.reject(new Error('Tried installing before browser sent \"beforeinstallprompt\" event'));\n  }, [finishInstallation, prompt]);\n  useEffect(() => {\n    if (prompt) {\n      setIsReady(true);\n    }\n  }, [prompt]);\n  useEffect(() => {\n    function ready(e) {\n      e.preventDefault();\n      setPrompt(e);\n    }\n\n    window.addEventListener(\"beforeinstallprompt\", ready);\n    return function () {\n      window.removeEventListener(\"beforeinstallprompt\", ready);\n    };\n  }, []);\n  return useMemo(() => ({\n    isReady,\n    promptToInstall,\n    hasFinishedInstallation,\n    finishInstallation\n  }), [isReady, promptToInstall, hasFinishedInstallation, finishInstallation]);\n}\n\n_s(useAddToHomeScreenPrompt, \"AtcNldGK/HMbQlpHw5RIPcSQYiA=\");","map":{"version":3,"sources":["D:/Juanchi/Programacion/Practicas realizadas/01-02-22 React y TypeScript - React-portafolio-pwa/src/Hooks/useAddToHomeScreenPrompt.tsx"],"names":["useCallback","useEffect","useMemo","useState","isInWebApp","window","matchMedia","matches","useAddToHomeScreenPrompt","prompt","setPrompt","isReady","setIsReady","hasFinishedInstallation","setHasFinishedInstallation","finishInstallation","promptToInstall","userChoice","then","choiceResult","outcome","Promise","reject","Error","ready","e","preventDefault","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;AAWA,MAAMC,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkB,4BAAlB,EAAgDC,OAAnE;AAEA,OAAO,SAASC,wBAAT,GAAoC;AAAA;;AACzC;AACA;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAmC,IAAnC,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,uBAAD,EAA0BC,0BAA1B,IACJX,QAAQ,CAACC,UAAD,CADV;AAGA,QAAMW,kBAAkB,GAAGf,WAAW,CAAC,MAAM;AAC3Cc,IAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACD,GAFqC,EAEnC,EAFmC,CAAtC,CATyC,CAazC;;AACA,QAAME,eAAe,GAAGhB,WAAW,CAAC,MAAM;AACxC,QAAIS,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACA,MAAP;AACAA,MAAAA,MAAM,CAACQ,UAAP,CAAkBC,IAAlB,CAAuB,UAAUC,YAAV,EAAwB;AAC7C,YAAIA,YAAY,CAACC,OAAb,KAAyB,UAA7B,EAAyC;AACvCL,UAAAA,kBAAkB;AACnB;AACF,OAJD;AAKA;AACD;;AAED,WAAOM,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,CACE,kEADF,CADK,CAAP;AAKD,GAhBkC,EAgBhC,CAACR,kBAAD,EAAqBN,MAArB,CAhBgC,CAAnC;AAkBAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAJ,EAAY;AACVG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAJQ,EAIN,CAACH,MAAD,CAJM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACd,aAASuB,KAAT,CAAeC,CAAf,EAA6C;AAC3CA,MAAAA,CAAC,CAACC,cAAF;AACAhB,MAAAA,SAAS,CAACe,CAAD,CAAT;AACD;;AAEDpB,IAAAA,MAAM,CAACsB,gBAAP,CAAwB,qBAAxB,EAA+CH,KAA/C;AAEA,WAAO,YAAY;AACjBnB,MAAAA,MAAM,CAACuB,mBAAP,CAA2B,qBAA3B,EAAkDJ,KAAlD;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAOtB,OAAO,CACZ,OAAO;AACLS,IAAAA,OADK;AAELK,IAAAA,eAFK;AAGLH,IAAAA,uBAHK;AAILE,IAAAA;AAJK,GAAP,CADY,EAOZ,CAACJ,OAAD,EAAUK,eAAV,EAA2BH,uBAA3B,EAAoDE,kBAApD,CAPY,CAAd;AASD;;GA5DeP,wB","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from \"react\";\r\n\r\ninterface IBeforeInstallPromptEvent extends Event {\r\n  readonly platforms: string[];\r\n  readonly userChoice: Promise<{\r\n    outcome: \"accepted\" | \"dismissed\";\r\n    platform: string;\r\n  }>;\r\n  prompt(): Promise<void>;\r\n}\r\n\r\nconst isInWebApp = window.matchMedia(\"(display-mode: standalone)\").matches;\r\n\r\nexport function useAddToHomeScreenPrompt() {\r\n  // CODIGO SACADO DE: https://www.youtube.com/watch?v=3f20qBfACzI\r\n  // No entendi su funcionamiento pero anda.\r\n\r\n  const [prompt, setPrompt] = useState<IBeforeInstallPromptEvent | null>(null);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [hasFinishedInstallation, setHasFinishedInstallation] =\r\n    useState(isInWebApp);\r\n\r\n  const finishInstallation = useCallback(() => {\r\n    setHasFinishedInstallation(true);\r\n  }, []);\r\n\r\n  // Hace aparecer la ventana para isntalar\r\n  const promptToInstall = useCallback(() => {\r\n    if (prompt) {\r\n      prompt.prompt();\r\n      prompt.userChoice.then(function (choiceResult) {\r\n        if (choiceResult.outcome === \"accepted\") {\r\n          finishInstallation();\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    return Promise.reject(\r\n      new Error(\r\n        'Tried installing before browser sent \"beforeinstallprompt\" event'\r\n      )\r\n    );\r\n  }, [finishInstallation, prompt]);\r\n\r\n  useEffect(() => {\r\n    if (prompt) {\r\n      setIsReady(true);\r\n    }\r\n  }, [prompt]);\r\n\r\n  useEffect(() => {\r\n    function ready(e: IBeforeInstallPromptEvent) {\r\n      e.preventDefault();\r\n      setPrompt(e);\r\n    }\r\n\r\n    window.addEventListener(\"beforeinstallprompt\", ready as any);\r\n\r\n    return function () {\r\n      window.removeEventListener(\"beforeinstallprompt\", ready as any);\r\n    };\r\n  }, []);\r\n\r\n  return useMemo(\r\n    () => ({\r\n      isReady,\r\n      promptToInstall,\r\n      hasFinishedInstallation,\r\n      finishInstallation,\r\n    }),\r\n    [isReady, promptToInstall, hasFinishedInstallation, finishInstallation]\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}