{"ast":null,"code":"import axios from \"axios\";\nexport const axiosMethod = async dataPetition => {\n  let message;\n  let data;\n\n  try {\n    let response = await axios(dataPetition.url, {\n      method: dataPetition.method,\n      data: dataPetition.data\n    }); // console.log(\"VER ESTO \", response)\n\n    data = await response.data;\n  } catch (error) {\n    var _error$response;\n\n    // Manipulacion del error\n    message = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.statusText) || \"Ocurrio un error\";\n  }\n\n  return {\n    data,\n    message\n  };\n};","map":{"version":3,"sources":["D:/Juanchi/Programacion/Practicas realizadas/01-02-22 React y TypeScript - React-portafolio-pwa/src/Utils/axiosMethod.ts"],"names":["axios","axiosMethod","dataPetition","message","data","response","url","method","error","statusText"],"mappings":"AAAA,OAAOA,KAAP,MAA+B,OAA/B;AAQA,OAAO,MAAMC,WAAW,GAAG,MAAOC,YAAP,IAAuC;AAChE,MAAIC,OAAJ;AACA,MAAIC,IAAJ;;AACA,MAAI;AACF,QAAIC,QAAQ,GAAG,MAAML,KAAK,CAACE,YAAY,CAACI,GAAd,EAAmB;AAC3CC,MAAAA,MAAM,EAAEL,YAAY,CAACK,MADsB;AAE3CH,MAAAA,IAAI,EAAEF,YAAY,CAACE;AAFwB,KAAnB,CAA1B,CADE,CAKF;;AAEAA,IAAAA,IAAI,GAAG,MAAMC,QAAQ,CAACD,IAAtB;AACD,GARD,CAQE,OAAOI,KAAP,EAAmB;AAAA;;AACnB;AACAL,IAAAA,OAAO,GAAG,CAAAK,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEH,QAAP,oEAAiBI,UAAjB,KAA+B,kBAAzC;AACD;;AAED,SAAO;AACLL,IAAAA,IADK;AAELD,IAAAA;AAFK,GAAP;AAID,CApBM","sourcesContent":["import axios, { Method  } from \"axios\";\r\n\r\ninterface IDataPetition {\r\n  url: string;\r\n  method: Method | undefined;\r\n  data: any;\r\n}\r\n\r\nexport const axiosMethod = async (dataPetition: IDataPetition) => {\r\n  let message;\r\n  let data;\r\n  try {\r\n    let response = await axios(dataPetition.url, {\r\n      method: dataPetition.method,\r\n      data: dataPetition.data,\r\n    });\r\n    // console.log(\"VER ESTO \", response)\r\n\r\n    data = await response.data;\r\n  } catch (error: any) {\r\n    // Manipulacion del error\r\n    message = error?.response?.statusText || \"Ocurrio un error\";\r\n  }\r\n\r\n  return {\r\n    data,\r\n    message,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}